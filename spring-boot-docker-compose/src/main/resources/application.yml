spring:

  application:
    name: blog

  datasource:
    url: <URI_TO_A_REMOTE_DATABASE>
    username: SA
    password: ${DATABASE_PASSWORD}

  docker.compose.enabled: false

  kafka:

    bootstrap-servers: <URI_TO_A_REMOTE_KAFKA_SERVER>

    consumer:
      group-id: ch.migrosonline
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties.spring.json.type.mapping: blogpost-update-event:ch.migrosonline.momentum.kafka.model.BlogPostUpdateEvent

    security:
      protocol: SASL_SSL
      properties.sasl:
        mechanism: PLAIN
        jaas.config: |
          org.apache.kafka.common.security.plain.PlainLoginModule required username='kafka' password='${KAFKA_PASSWORD}'

  rabbitmq:
    host: <URI_TO_A_REMOTE_RABBITMQ_SERVER>
    port: 5672
    username: rabbitmq
    password: ${RABBIT_PASSWORD}
